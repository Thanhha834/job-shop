@model JobShop.Models.MyViewModel

@{
    ViewBag.Title = "Upload Resume";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<!DOCTYPE html>
<html>
<head>
    <title>CV</title>
    <!-- for-mobile-apps -->
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta name="keywords" content="Job Application Form Widget Responsive, Login form web template, Sign up Web Templates, Flat Web Templates, Login signup Responsive web template, Smartphone Compatible web template, free webdesigns for Nokia, Samsung, LG, SonyEricsson, Motorola web design" />
    <!-- //for-mobile-apps -->
    <link href='//fonts.googleapis.com/css?family=Questrial' rel='stylesheet' type='text/css'>
    <link href='//fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,600,600italic,700,700italic,800,800italic' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="~/Content/Cv/css/j-forms.css">
    <link href="~/Content/Cv/css/style2.css" rel="stylesheet" type="text/css" media="all" />

</head>
<body>
    <div class="content">
        <h1>Upload your Cv</h1>
        @using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="main">

                <form class="contact-forms">
                    @*<div class="form-horizontal">*@

                    <div class="form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DesiredJobTitle, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DesiredJobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DesiredJobTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="btn btn-primary btn-block" style="margin-bottom:20px">
                            @Html.LabelFor(x => x.File)
                            @Html.TextBoxFor(x => x.File, new { type = "file" })
                            @Html.ValidationMessageFor(x => x.File)
                        </div>
                        @*</div>*@
                        <div>
                            <button type="submit" class="btn btn-success btn-block">Upload File</button>
                            <span class="hint"> pdf/word/text files</span>
                        </div>
                        <div class="footer">
                            <button type="reset" class="btn btn-danger btn-block">Reset</button>
                        </div>
                        <!-- end /.footer -->
                        <!-- end files -->
                        <!-- end /.content -->



                    </div>
                </form>
            </div>
        }
    </div>
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert("@ViewBag.Message");
            };
        </script>

    }

    <div class="col-md-3" style="margin-left:420px">
        <a href="@Url.Action("Index", "Home")" class="btn btn-success btn-block">
            <i class="fa fa-arrow-circle-left"></i>Back to Main menue
        </a>
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }



</body>
</html>